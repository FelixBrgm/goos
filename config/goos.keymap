/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <3 2>;
            then-layer = <4>;
        };
    };

    behaviors {
        hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <100>;
        };

        lt_repeat: lt_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_REPEAT";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Gamepad {
            bindings = <&tog 5>;
            key-positions = <9 29>;
        };

        toggle_layout {
            bindings = <&tog 1>;
            key-positions = <0 20>;
        };

        vim_save {
            bindings = <&vim_save>;
            key-positions = <21 22>;
            layers = <0>;
        };

        lock {
            bindings = <&kp K_LOCK>;
            key-positions = <30 32 31>;
        };
    };

    macros {
        vim_save: vim_save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE &kp COLON &kp W &kp ENTER>;
            label = "VIM_SAVE";
            wait-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha_colemak_dh {
            bindings = <
&kp Q                &kp W            &kp F                &kp P                          &kp B                              &kp J           &kp L               &kp U                &kp Y            &kp SEMICOLON
&hrm LEFT_COMMAND A  &hrm LEFT_ALT R  &hrm LEFT_CONTROL S  &hrm LEFT_SHIFT T              &kp G                              &kp M           &hrm RIGHT_SHIFT N  &hrm LEFT_CONTROL E  &hrm LEFT_ALT I  &hrm LEFT_GUI O
&kp Z                &kp X            &kp C                &kp D                          &kp V                              &kp K           &kp H               &kp COMMA            &kp DOT          &kp SLASH
                                                           &hrm LA(LG(LEFT_CONTROL)) ESC  &lt 3 SPACE  &kp TAB    &kp ENTER  &lt_repeat 2 0  &kp BSPC
            >;
        };

        alpha_qwerty {
            bindings = <
&kp Q            &kp W            &kp E                &kp R              &kp T                              &kp Y           &kp U               &kp I                &kp O            &kp P
&hrm LEFT_GUI A  &hrm LEFT_ALT S  &hrm LEFT_CONTROL D  &hrm LEFT_SHIFT F  &kp G                              &kp H           &hrm RIGHT_SHIFT J  &hrm LEFT_CONTROL K  &hrm LEFT_ALT L  &hrm LEFT_GUI SEMICOLON
&kp Z            &kp X            &kp C                &kp V              &kp B                              &kp N           &kp M               &kp COMMA            &kp DOT          &kp SLASH
                                                       &lt 0 ESC          &lt 3 SPACE  &kp TAB    &kp ENTER  &lt_repeat 2 0  &kp BSPC
            >;
        };

        Symbol {
            bindings = <
&none                      &kp SINGLE_QUOTE             &kp DOLLAR               &kp AMPERSAND               &kp CARET                    &none        &kp POUND               &kp LEFT_BRACKET                    &kp RIGHT_BRACKET                &none
&hrm LEFT_GUI EXCLAMATION  &hrm LEFT_ALT DOUBLE_QUOTES  &hrm LEFT_CONTROL MINUS  &hrm LEFT_SHIFT UNDERSCORE  &kp PLUS                     &kp AT_SIGN  &hrm RIGHT_SHIFT ASTRK  &hrm LEFT_CONTROL LEFT_PARENTHESIS  &hrm LEFT_ALT RIGHT_PARENTHESIS  &hrm LEFT_GUI PERCENT
&none                      &kp GRAVE                    &kp PIPE                 &kp EQUAL                   &kp TILDE                    &none        &kp BACKSLASH           &kp LEFT_BRACE                      &kp RIGHT_BRACE                  &none
                                                                                 &kp ESC                     &mo 3      &kp TAB    &none  &none        &none
            >;

            label = "symbol_layer";
        };

        Numbers_Navigation {
            bindings = <
&none             &kp NUMBER_9      &kp NUMBER_8          &kp NUMBER_7        &kp MINUS                      &kp C_BRI_UP  &kp C_MUTE             &kp C_VOLUME_DOWN     &kp C_VOLUME_UP      &none
&hrm LEFT_GUI N0  &hrm LEFT_ALT N3  &hrm LEFT_CONTROL N2  &hrm LEFT_SHIFT N1  &kp PLUS                       &kp LEFT      &hrm RIGHT_SHIFT DOWN  &hrm LEFT_CONTROL UP  &hrm LEFT_ALT RIGHT  &kp LEFT_GUI
&none             &kp NUMBER_6      &kp NUMBER_5          &kp NUMBER_4        &kp STAR                       &kp C_BRI_DN  &kp C_PREV             &kp C_PP              &kp C_NEXT           &none
                                                          &none               &none      &none    &kp ENTER  &mo 2         &kp BSPC
            >;

            label = "numb_nav_layer";
        };

        Tri {
            bindings = <
&bootloader  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR                  &none  &none      &none  &none  &bootloader
&none        &none         &none         &caps_word    &none                       &none  &kp RC(F)  &none  &none  &none
&none        &none         &none         &none         &none                       &none  &none      &none  &none  &none
                                         &none         &none       &none    &none  &none  &none
            >;

            label = "tri_layer";
        };

        gamepad {
            bindings = <
&kp ESC  &kp Q  &kp W  &kp E      &kp R                      &none  &kp L     &kp UP    &kp R      &none
&kp TAB  &kp A  &kp S  &kp D      &kp F                      &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&none    &kp Y  &kp X  &kp C      &none                      &none  &kp S     &none     &kp E      &none
                       &kp LSHFT  &kp SPACE  &none    &kp B  &kp A  &none
            >;
        };
    };
};
